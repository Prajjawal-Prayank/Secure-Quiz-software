/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.*;
import javax.swing.JOptionPane;
import java.util.Timer;
import java.util.TimerTask;
/**
 *
 * @author Acer
 */
public class Test extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    public Test() {
        initComponents();
    }
 
  static  ArrayList<String> options=new ArrayList<>();
  static  ArrayList<Integer> questions = new ArrayList<>();
  static String opt1,opt2,opt3,opt4,ans,query2,query3,query4,query5,query6;
  static int count =0;
  static  int[] arr=new int[100];  
  static int i;
  static int correct=0;
  static int question_count=0;
  static String option1,option2,option3,option4;
  static Timer timer=null;
  
  
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        op1 = new javax.swing.JRadioButton();
        op2 = new javax.swing.JRadioButton();
        op3 = new javax.swing.JRadioButton();
        op4 = new javax.swing.JRadioButton();
        submit = new javax.swing.JButton();
        next = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        marks = new javax.swing.JButton();
        end = new javax.swing.JButton();
        scores = new javax.swing.JButton();
        clock = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        question.setEditable(false);
        question.setColumns(20);
        question.setRows(5);
        jScrollPane1.setViewportView(question);

        buttonGroup1.add(op1);

        buttonGroup1.add(op2);
        op2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(op3);

        buttonGroup1.add(op4);

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        next.setText("Next -->");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        previous.setText("<-- Previous");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        marks.setText("Total Marks");
        marks.setEnabled(false);
        marks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marksActionPerformed(evt);
            }
        });

        end.setText("End Test");
        end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endActionPerformed(evt);
            }
        });

        scores.setText("Final Scores");
        scores.setEnabled(false);
        scores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoresActionPerformed(evt);
            }
        });

        clock.setBackground(new java.awt.Color(51, 0, 51));
        clock.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        clock.setForeground(new java.awt.Color(51, 0, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Time  Remaining -");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(op2, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                                .addComponent(op3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(op4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(op1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(previous)
                                .addGap(69, 69, 69)
                                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(end)
                        .addGap(63, 63, 63)
                        .addComponent(marks)
                        .addGap(47, 47, 47)
                        .addComponent(scores)))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(op1)
                .addGap(3, 3, 3)
                .addComponent(op2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(op3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(op4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(next)
                    .addComponent(previous)
                    .addComponent(clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marks)
                    .addComponent(end)
                    .addComponent(scores))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
count--;
if(count<0)
{
    JOptionPane.showMessageDialog(null,"This is the first question in the test");
    if(count<0)
        count=0;
}
else
{        
    Connection connection = null;
    try
    {
        Class.forName("com.mysql.jdbc.Driver");
        String url = "jdbc:mysql://localhost/softablitz";
        connection = DriverManager.getConnection(url, "root", "");
        String query="Select question,option1,option2,option3,option4 from "+QuizNumber.currentTable
                        + " where id="+ questions.get(count);
        PreparedStatement preStat = connection.prepareStatement(query);
        ResultSet result = preStat.executeQuery();
        result.next();

        option1=result.getString("option1");
        option2=result.getString("option2");
        option3=result.getString("option3");
        option4=result.getString("option4");
        options.clear();
        options.add(option1);
        options.add(option2);
        options.add(option3);
        options.add(option4);
        Collections.shuffle(options);
        
        question.setText(result.getString("question"));
        op1.setText(options.get(0));
        op2.setText(options.get(1));
        op3.setText(options.get(2));
        op4.setText(options.get(3));
    }
    catch(Exception e )
    {
    System.out.println("Exeution failed at line :-" + e);
    }
    finally{
    try{connection.close();} catch(Exception e) {}            
    }
}       

// TODO add your handling code here:
    }//GEN-LAST:event_previousActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
String receivedAnswer="";
if(op1.isSelected()==true)
    receivedAnswer=op1.getText();
if(op2.isSelected()==true)
    receivedAnswer=op2.getText();
if(op3.isSelected()==true)
    receivedAnswer=op3.getText();
if(op4.isSelected()==true)
    receivedAnswer=op4.getText();

Connection connection = null;
try{
    Class.forName("com.mysql.jdbc.Driver");
    String url = "jdbc:mysql://localhost/softablitz";
    connection= DriverManager.getConnection(url, "root", "");
    String query="Select answer from " + QuizNumber.currentTable
                    + " where id="+questions.get(count) ; 
    PreparedStatement preStat = connection.prepareStatement(query);
    ResultSet result = preStat.executeQuery();
    result.next();
    ans=result.getString("answer");
    if( receivedAnswer.equals(ans) )
        arr[count]=1;
    else
        arr[count]=0;
    buttonGroup1.clearSelection();
    JOptionPane.showMessageDialog(null, "your answer was submitted.");
}
catch(Exception e )
{
System.out.println("Exeution failed at line :-" + e);
}
finally{
    try{connection.close();} catch(Exception e) {}            
}  


    
    
        
        // TODO add your handling code here:
    }//GEN-LAST:event_submitActionPerformed

    private void op2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_op2ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
buttonGroup1.clearSelection();
        // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
count++;
if(count>=question_count)
{
    JOptionPane.showMessageDialog(null,"This is the last question in the test");
    if(count>question_count)
        count=question_count;
}
else
{
    Connection connection = null;
    try
    {
        Class.forName("com.mysql.jdbc.Driver");
        String url = "jdbc:mysql://localhost/softablitz";
        connection= DriverManager.getConnection(url, "root", "");
        String query="Select question,option1,option2,option3,option4 from "+QuizNumber.currentTable
                        + " where id="+ questions.get(count);
        PreparedStatement preStat = connection.prepareStatement(query);
        ResultSet result = preStat.executeQuery();
        result.next();

        option1=result.getString("option1");
        option2=result.getString("option2");
        option3=result.getString("option3");
        option4=result.getString("option4");
        options.clear();
        options.add(option1);
        options.add(option2);
        options.add(option3);
        options.add(option4);
        Collections.shuffle(options);
        
        question.setText(result.getString("question"));
        op1.setText(options.get(0));
        op2.setText(options.get(1));
        op3.setText(options.get(2));
        op4.setText(options.get(3));

    }
    catch(Exception e )
    {
    System.out.println("Exeution failed at line :-" + e);
    }
    finally{
        try{connection.close();} catch(Exception e) {}            
    }  
}
// TODO add your handling code here:
    }//GEN-LAST:event_nextActionPerformed

    private void marksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marksActionPerformed

JOptionPane.showMessageDialog(null, "total marks is "+correct);
        
// TODO add your handling code here:
    }//GEN-LAST:event_marksActionPerformed

    private void endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endActionPerformed
for(int i=0; i<question_count; i++)
    if(arr[i] == 1)
        correct++;
marks.setEnabled(true);
scores.setEnabled(true);
previous.setEnabled(false);
next.setEnabled(false);
submit.setEnabled(false);
clear.setEnabled(false);
Connection connection = null;
try{
    Class.forName("com.mysql.jdbc.Driver");
    String url = "jdbc:mysql://localhost/softablitz";
    connection=DriverManager.getConnection(url, "root", "");
    String query="Insert into marks values (?,?,?);";
    PreparedStatement preStat = connection.prepareStatement(query);
    preStat.setInt(1,Login.regNo);
    preStat.setString(2,QuizNumber.currentTable);  
    preStat.setInt(3,correct);
    preStat.executeUpdate();
}

catch(Exception e )
{
System.out.println("Execution failed at line :-" + e);
}
finally{
    try{connection.close();} catch(Exception e) {}            
} 
        // TODO add your handling code here:
    }//GEN-LAST:event_endActionPerformed

    private void scoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoresActionPerformed
Rankings ranking=new Rankings();
Connection connection =  null;
try{
    int registrationNumber,marks;
    Class.forName("com.mysql.jdbc.Driver");
    String url = "jdbc:mysql://localhost/softablitz";
    connection=DriverManager.getConnection(url, "root", "");
    Statement st=connection.createStatement();
    String qq="Select registration_no,marks from marks where quiz=? order by marks desc;";
    PreparedStatement preStat = connection.prepareStatement(qq);
    preStat.setString(1,QuizNumber.currentTable);
    ResultSet result = preStat.executeQuery();
    int i=1;String a,b,c;
    while(result.next()) {
        registrationNumber=result.getInt("registration_no");
        marks=result.getInt("marks");
        a="";a+=i;
        b="";b+=registrationNumber;
        c="";c+=marks;
        ranking.ta.append(a);
        ranking.ta.append("          ");
        ranking.ta.append(b);
        ranking.ta.append("                     ");
        ranking.ta.append(c);
        ranking.ta.append("\n");
        i++;
        ranking.setVisible(true);
        dispose();
    }
      
}   
catch(Exception e )
{
    System.out.println("Execution failed at line :-" + e);
}
finally{
        try{connection.close();} catch(Exception e) {}            
    } 
// TODO add your handling code here:
    }//GEN-LAST:event_scoresActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void display_first()
    {
        Connection connection = null;
        try{
            String ques="";
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/softablitz";
            connection = DriverManager.getConnection(url, "root", "");
            String query="Select count(id) from " + QuizNumber.currentTable + ";";
            PreparedStatement preStat = connection.prepareStatement(query);
            ResultSet result = preStat.executeQuery();
            result.next();
            question_count=result.getInt("count(id)");
            for(int i=1;i<=question_count;i++)
                    questions.add(i);
            Collections.shuffle(questions);
            
            
            //printing first question
            query="Select question,option1,option2,option3,option4 from "+QuizNumber.currentTable
                    + " where id="+ questions.get(count);
            preStat = connection.prepareStatement(query);
            result = preStat.executeQuery();
            result.next();
            
            option1=result.getString("option1");
            option2=result.getString("option2");
            option3=result.getString("option3");
            option4=result.getString("option4");
            options.clear();
            options.add(option1);
            options.add(option2);
            options.add(option3);
            options.add(option4);
            Collections.shuffle(options);

            question.setText(result.getString("question"));
            op1.setText(options.get(0));
            op2.setText(options.get(1));
            op3.setText(options.get(2));
            op4.setText(options.get(3));
            
            
            timer = new Timer(); 
            TimerTask task = new Helper(); 
            Helper.time=15*60;
            timer.schedule(task, 0, 1000);
            
    }
    catch(Exception e )
    {
    System.out.println("Exeution failed at line :-" + e);
    }
    finally{
        try{connection.close();} catch(Exception e) {}            
    }  

}
    
    
    
    
    
    
    static class Helper extends TimerTask 
    { 
        static int time;
        
        public void run() 
        { 
            int min=time/60,sec=time%60;
            clock.setText(Integer.toString(min) + ":" + Integer.toString(sec));
            time--;
            if(time==0)
            {
                timer.cancel();
                clock.setText("00:00");
                end.doClick();
            }
        } 
    } 
  
  
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                marks.setEnabled(false); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private static javax.swing.JLabel clock;
    private static javax.swing.JButton end;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JButton marks;
    private javax.swing.JButton next;
    private static javax.swing.JRadioButton op1;
    private static javax.swing.JRadioButton op2;
    private static javax.swing.JRadioButton op3;
    private static javax.swing.JRadioButton op4;
    private javax.swing.JButton previous;
    private static javax.swing.JTextArea question;
    private javax.swing.JButton scores;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
